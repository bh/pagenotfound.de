name: Build and Deploy
on:
  push:
    branches:
      - live
      - main
      - 'renovate/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        name: Setup NodeJS
        with:
          node-version-file: '.tool-versions'

      - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        name: "Next JS Cache"
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm build 
      - run: |           
            mkdir dist
            mkdir -p app/standalone/public
            cp ./package.json app
            cp -r .next/standalone app
            cp .next/static app/standalone/.next/ -r
            cp -r public/* app/standalone/public/
            cp ecosystem.config.js app
            tar -cJf dist/standalone-dist.tar.xz app
        name: Create artifact

      - name: Upload artifact
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4
        with:
          name: nodejs-app
          path: ./dist/standalone-dist.tar.xz
          retention-days: 3
  deploy:
    needs: 'build'
    name: Deploy to server
    if: github.ref == 'refs/heads/live'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4
        with:
          name: nodejs-app

      - name: Copy artifact to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "standalone-dist.tar.xz"
          target: "/srv/http/pnf/"

      - name: Setup Node JS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: | 
            rm -rf app && tar --overwrite -xf standalone-dist.tar.xz
            cd app && pm2 restart ecosystem.config.js
      
